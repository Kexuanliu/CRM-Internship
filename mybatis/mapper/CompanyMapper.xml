<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xuebei.crm.company.CompanyMapper">

    <resultMap id="companyMap" type="com.xuebei.crm.company.Company">
        <id property="companyId" column="company_id"/>
        <result property="companyName" column="com_nm"/>
    </resultMap>

    <resultMap id="companyListMap" type="com.xuebei.crm.company.Company">
        <id property="companyId" column="company_id"/>
        <result property="companyName" column="com_nm"/>
        <result property="status" column="status"/>
    </resultMap>
    
    <resultMap id="companyDataMap" type="com.xuebei.crm.company.TmpCompanyData">
        <result property="id" column="sales_opportunity_id"/>
        <result property="amount" column="amount"/>
        <result property="status" column="sales_status"/>
        <result property="newStatus" column="new_status"/>
    </resultMap>

    <resultMap id="companyApplyMap" type="com.xuebei.crm.company.CompanyUser">
        <id property="userId" column="user_id"/>
        <result property="crmUserName" column="real_nm"/>
        <result property="tel" column="tel"/>
        <result property="companyId" column="company_id"/>
        <result property="createTs" column="create_ts"/>
        <result property="leaderId" column="leader_id"/>
    </resultMap>

    <resultMap id="userMap" type="com.xuebei.crm.company.CompanyUser">
        <id property="crmUserId" column="crm_user_id"/>
        <result property="crmUserName" column="real_nm"/>
        <result property="tel" column="TEL"/>
    </resultMap>

    <resultMap id="useraMap" type="com.xuebei.crm.customer.Contacts">
        <id property="contactsId" column="contacts_id"/>
        <result property="tel" column="tel"/>
        <result property="wechat" column="wechat"/>
        <result property="QQ" column="QQ"/>
    </resultMap>

    <select id="queryCompanyList" resultMap="companyListMap">
        SELECT
            c.company_id,
            c.com_nm,
            cu.status
        FROM company c
        INNER JOIN company_user cu ON c.company_id = cu.company_id
        WHERE cu.crm_user_id=#{crmUserId};
    </select>

    <select id="queryCompanyListByCrmUserId" resultMap="companyMap">
        SELECT
        company.company_id,
        com_nm
        FROM user_view
        LEFT JOIN company ON user_view.company_id = company.company_id
        WHERE user_view.crm_user_id = #{crmUserId};
    </select>


    <select id="queryUserId" resultType="java.lang.String">
        SELECT user_id
        FROM user_view
        WHERE crm_user_id = #{crmUserId} AND company_id = #{companyId};
    </select>

    <select id="queryUserType" resultType="java.lang.String">
        SELECT  user_type
        FROM company_user
        WHERE user_id = #{userId};
    </select>

    <select id="queryCompanyIdByUserId" resultType="java.lang.String">
        SELECT company_id
        FROM company_user
        WHERE user_id = #{userId};
    </select>

    <select id="queryJournalFine" resultType="java.util.HashMap">
        SELECT  delay,miss
        FROM journal_fine
        where company_id=#{companyId}
    </select>
    <update id="changemoney">
        update journal_fine
        SET delay=#{delay},
        miss=#{miss}
        where company_id=#{compandId}
    </update>
    <insert id="joinCompany">
        INSERT INTO `company_user` (
            `user_id`,
            `user_type`,
            `crm_user_id`,
            `company_id`,
            `creator_id`,
            `create_ts`,
            `updater_id`,
            `update_ts`
        )
        VALUES
            (
                #{userId},
                'NORMAL',
                #{crmUserId},
                #{companyId},
                'system',
                NOW(),
                'system',
                NOW()
            );
    </insert>

    <insert id="addCompany">
        INSERT INTO `company` (
            `company_id`,
            `com_nm`,
            `creator_id`,
            `create_ts`,
            `updater_id`,
            `update_ts`
        )
        VALUES (
            #{companyId},
            #{companyName},
            'system',
            NOW(),
            'system',
            NOW()
        )

    </insert>

    <select id="getUserId" resultType="java.lang.String">
        SELECT crm_user_id FROM crm_user
        WHERE real_nm = #{userName} AND TEL = #{tel}
    </select>
    
    <select id="getUserInfo" resultMap="userMap">
        SELECT real_nm, TEL, crm_user_id FROM crm_user
        WHERE crm_user.crm_user_id = #{crmUserId}
    </select>

    <select id="queryCompany" resultMap="companyMap">
        SELECT company_id,com_nm FROM company WHERE
        com_nm LIKE CONCAT('%', #{name}, '%')
    </select>

    <select id="queryCompanyComplete" resultMap="companyMap">
        SELECT company_id,com_nm FROM company WHERE
        com_nm = #{name} ;
    </select>

    <select id="queryApplyStatus" resultType="java.lang.String">
        SELECT status FROM company_user WHERE
        crm_user_id = #{crmUserId} AND company_id = #{companyId};
    </select>

    <select id="queryApplyStaff" resultMap="companyApplyMap">
       select com.user_id,cu.real_nm, cu.tel,com.create_ts,com.company_id from crm_user cu
         INNER JOIN company_user com ON com.crm_user_id = cu.crm_user_id AND com.company_id =(select
			company_id from company_user where user_id =#{userId} AND
          user_type = 'ADMIN')
         where com.status = 'PENDING'
    </select>

    <update id="agreeApply" parameterType="java.lang.String">
        UPDATE company_user as cu SET cu.update_ts= NOW(),
       cu.status='PERMITTED',
       cu.updater_id = #{crmUserId}
        WHERE cu.user_id=#{userId};
    </update>

    <update id="refuseApply" parameterType="java.lang.String">
        UPDATE company_user as cu SET cu.update_ts= NOW(),
        cu.status='REFUSE',
        cu.updater_id = #{crmUserId}
        WHERE cu.user_id=#{userId};
    </update>

    <select id="queryCompanyName" resultType="java.lang.String">
       select com_nm from company where company_id = (
        select company_id from company_user where user_id = #{userId});
    </select>

    <select id="queryStatus" resultType="java.lang.String">
        select status from company_user where user_id = #{userId};
    </select>

    <select id="queryCrmUserId" resultType="java.lang.String">
        select crm_user_id from company_user where user_id = #{userId};
    </select>

    <update id="applyAgain">
        update company_user
        SET  status ='PENDING', updater_id = #{crmUserId}, update_ts= NOW()
        where crm_user_id = #{crmUserId} and company_id = #{companyId}
    </update>
    <select id="searchOpportunityId" resultMap="companyDataMap">
        select  sales_opportunity_id,sales_status,amount from  sales_opportunity
        <where>
        (user_id IN
        <foreach collection="childs" item="sender" index="i" open="(" close=")" separator=",">
            #{sender}
        </foreach>)
        <if test="customerId != null and customerId != ''">
            AND customer_id=#{customerId}
        </if>
            AND has_delete=0
        </where>
    </select>
    
    <select id="searchOppStatus" resultMap="companyDataMap">
        select sales_opportunity_id,sales_status,new_status from opportunity_change
        where
        (sales_opportunity_id in
        <foreach collection="oppIds" item="sender" open="(" close=")" separator=",">
            #{sender}
        </foreach>
        )
    </select>

    <select id="searVisitCount" resultMap="useraMap">
        SELECT c.contacts_id,c.tel,c.wechat,c.QQ
        FROM visit_contacts as v
            left join contacts as c ON v.contacts_id=c.contacts_id
            left join customer_dept as d ON  c.customer_dept_id=d.customer_dept_id
            left join visit_log as l ON v.visit_log_id=l.visit_log_id
            left join  journal as j ON l.journal_id=j.journal_id
        <where>
         (j.user_id IN
        <foreach collection="childs" item="sender" index="i" open="(" close=")" separator=",">
            #{sender}
        </foreach>)
        <if test="customerId != null and customerId != ''">
            AND d.customer_id=#{customerId}
        </if>
        </where>
    </select>
<select id="queryUser" resultType="java.lang.String">
    select user_id
    from  company_user
    where company_id=#{companyId}
</select>
    <!--<select id="searContactsACount" resultMap="useraMap">-->
        <!--SELECT c.contacts_id,c.tel,c.wechat,c.QQ-->
        <!--FROM contacts as c-->
        <!--left join customer_dept as d ON  c.customer_dept_id=d.customer_dept_id-->
        <!--WHERE d.customer_id=#{customerId}-->
    <!--</select>-->

    <select id="getUserNameByCompanyUserId" resultType="java.lang.String">
        SELECT b.real_nm from company_user a INNER JOIN crm_user b on a.crm_user_id=b.crm_user_id
                  and a.user_id= #{userId};
    </select>


    <select id="getAllCompanyUser" resultMap="companyApplyMap">
        select *
        from company_user;
    </select>

    <update id="repairCompanyUser">
        update company_user
        set rels_fullpath = #{path}
        where user_id = #{userId};
    </update>

    <select id="getLeaderFullPathByLeaderId" resultMap="companyApplyMap">
        select *
        from company_user
        where rels_fullpath LIKE CONCAT('%', #{leaderId}, '%');
    </select>
</mapper>